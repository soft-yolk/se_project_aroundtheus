!function(){"use strict";class e{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formEl=t,this._inputList=Array.from(this._formEl.querySelectorAll(this._inputSelector)),this._submitButton=this._formEl.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_checkFormValidity(){return this._inputList.every((e=>e.validity.valid))}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}_toggleButtonState(){this._checkFormValidity()?(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1):(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0)}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._formEl.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class t{constructor(e){this._popupElement=document.querySelector(e)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()}))}}class s extends t{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._submitButton=this._popupForm.querySelector(".modal__button"),this._submitButtonText=this._submitButton.textContent,this.handleFormSubmit=t}close(){this._popupForm.reset(),super.close()}getInputValues(){const e=this._popupElement.querySelectorAll(".modal__input"),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._popupElement.addEventListener("submit",(e=>{e.preventDefault(),this.handleFormSubmit(this.getInputValues()),this.close()}))}setLoading(e){this._submitButton.textContent=e?"Saving...":this._submitButtonText}}class r{constructor(e,t,s,r,n){let{name:i,link:o,_id:a,isLiked:l}=e;this._name=i,this._link=o,this._id=a,this.isLiked=l,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteButton=r,this._handleLikeClick=n}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".elements__card").cloneNode(!0)}_setEventListeners(){this._likeButton=this._cardElement.querySelector(".elements__like-button"),this._likeButton.addEventListener("click",(()=>{this.handleLikeIcon()})),this._cardElement.querySelector(".elements__trash-button").addEventListener("click",(()=>{this._handleDeleteButton(this)})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this._cardImage)}))}handleLikeIcon(){this._likeButton.classList.toggle("elements__like-button_active")}updateLiked(){this.isLiked?this._likeButton.classList.add("elements__like-button_active"):this._likeButton.classList.remove("elements__like-button_active")}setLikeStatus(e){this.isLiked=e,this.updateLiked()}getView(){return this._cardElement=this._getTemplate(),this.renderCard(),this._setEventListeners(),this.updateLiked(),this._cardElement}handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}renderCard(){this._cardImage=this._cardElement.querySelector(".elements__image"),this._cardTitle=this._cardElement.querySelector(".elements__title"),this._likeButton=this._cardElement.querySelector(".elements__like-button"),this._cardTitle.textContent=this._name,this._cardImage.alt=this._name,this._cardImage.src=this._link}}const n={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};document.querySelector(".elements__cards");const i=document.querySelector("#profile-edit-button"),o=document.querySelector(".profile__add-button"),a=document.querySelector("#add-card-modal").querySelector(".modal__form"),l=document.querySelector("#profile-picture-modal").querySelector(".modal__form"),c=document.querySelector("#profile-edit-modal").querySelector(".modal__form"),d=document.querySelector("#name-modal-input"),h=document.querySelector("#description-modal-input"),u=document.querySelector(".profile__image"),_=document.querySelector(".profile__icon"),m=document.querySelector("#profile-picture-modal").querySelector(".modal__button"),p=new class{constructor(e,t,s){this._nameElement=document.querySelector(e),this._aboutElement=document.querySelector(t),this._avatar=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,job:this._aboutElement.textContent}}setUserInfo(e){let{name:t,about:s}=e;this._nameElement.textContent=t,this._aboutElement.textContent=s}setUserAvatar(e){this._avatar.src=e}}(".profile__name",".profile__description",".profile__image"),v=new class{constructor(e){this.baseUrl=e.baseUrl,this.headers=e.headers}_checkServerResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(this.baseUrl+"/cards",{method:"GET",headers:this.headers}).then(this._checkServerResponse)}getUserInfo(){return fetch(this.baseUrl+"/users/me",{method:"GET",headers:this.headers}).then(this._checkServerResponse)}updateProfileInfo(e,t){return fetch(this.baseUrl+"/users/me",{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e,about:t})}).then(this._checkServerResponse)}updateAvatar(e){return fetch(this.baseUrl+"/users/me/avatar",{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:e})}).then(this._checkServerResponse)}addCard(e){let{name:t,link:s}=e;return fetch(this.baseUrl+"/cards",{method:"POST",headers:this.headers,body:JSON.stringify({name:t,link:s})}).then(this._checkServerResponse)}deleteCard(e){return fetch(this.baseUrl+`/cards/${e}`,{method:"DELETE",headers:this.headers,body:JSON.stringify({_id:e})}).then(this._checkServerResponse)}updateLike(e){return fetch(this.baseUrl+`/cards/${e}/likes`,{method:"PUT",headers:this.headers}).then(this._checkServerResponse)}removeLike(e){return fetch(this.baseUrl+`/cards/${e}/likes`,{method:"DELETE",headers:this.headers}).then(this._checkServerResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"7b855de8-b589-492b-9e1c-b631d0b0f4c2","Content-Type":"application/json"}}),E=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}renderItems(e){e.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({renderer:e=>{E.addItem(b(e))}},".elements__cards");function S(e,t){e.textContent=t}function b(e){const t=new r(e,"#element-template",(()=>function(e){f.open(e.name,e.link)}(e)),y,L);return t.getView()}v.getInitialCards().then((e=>{E.renderItems(e.reverse()),console.log(e)})).catch((e=>{console.error(e)})),v.getUserInfo().then((e=>{p.setUserInfo(e),p.setUserAvatar(e.avatar)})).catch((e=>{console.error(e)}));const f=new class extends t{constructor(e){super(e),this._previewImage=this._popupElement.querySelector(".modal__preview-image"),this._imageCaption=this._popupElement.querySelector(".modal__title")}open(e,t){this._previewImage.src=t,this._previewImage.alt=e,this._imageCaption.textContent=e,super.open()}}("#modal-preview");function L(e){return e.isLiked?v.removeLike(e._id).then((()=>{e.setLikeStatus(!1)})).catch((e=>{console.error(e)})):v.updateLike(e._id).then((()=>{e.setLikeStatus(!0)})).catch((e=>{console.error(e)}))}f.setEventListeners();const k=new class extends t{constructor(e,t){super(e),this._confirmDelete=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._submitButton=this._popupElement.querySelector(".modal__button"),this._submitButtonText=this._submitButton.textContent}setEventListeners(){super.setEventListeners(),this._confirmDelete.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(),this.close()}))}setSubmitAction(e){this._handleFormSubmit=e}}("#confirm-modal");function y(e){k.open(),k.setSubmitAction((()=>{v.deleteCard(e._id).then((()=>{k.close(),e.handleDeleteCard()})).catch((e=>{console.log(e)}))})),console.log(e)}k.setEventListeners(),_.addEventListener("click",(()=>{w.open()})),u.addEventListener("click",(()=>{w.open(),q.resetValidation()})),i.addEventListener("click",(()=>{const e=p.getUserInfo();d.value=e.name,h.value=e.job,B.open(),C.resetValidation()})),o.addEventListener("click",(()=>{g.resetValidation(),I.open()}));const g=new e(n,a);g.enableValidation();const C=new e(n,c);C.enableValidation();const q=new e(n,l);q.enableValidation();const I=new s("#add-card-modal",(function(e){v.addCard(e).then((e=>{console.log(e),E.addItem(b(e)),I.close()})).catch((e=>{console.log(e)}))}));I.setEventListeners();const B=new s("#profile-edit-modal",(function(e){let{name:t,about:s}=e;return B.setLoading(!0),v.updateProfileInfo(t,s).then((e=>{p.setUserInfo(e),B.close()})).finally((()=>{}))}));B.setEventListeners();const w=new s("#profile-picture-modal",(function(e){S(m,"Saving..."),console.log(e),v.updateAvatar(e.link).then((t=>{p.setUserAvatar(e.link),w.close()})).catch((e=>{console.log(e).finally((()=>{S(m,"Save")}))}))}));w.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,